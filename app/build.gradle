apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file("keystore.properties") // 创建文件
def keystoreProperties = new Properties() // 创建 Properties
keystoreProperties.load(new FileInputStream(keystorePropertiesFile)) // 加载 Properties

def AppName_Sit = "ULib-Sit"
def AppName_Alpha = "ULib-Alpha"
def AppName_Product = "ULib"

//def ApiHost_Sit = '"http://api.yytianqi.com/"'
def ApiHost_Sit = '"http://apitest.omegle.fun/"'
def ApiHost_Alpha = '"http://api.yytianqi.com/"'
def ApiHost_Product = '"http://api.yytianqi.com/"'

android {
    compileSdkVersion rootProject.android.compileSdkVersion
    defaultConfig {
        applicationId "mm.chenme.lib.commutillibdemo"
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled rootProject.android.multiDexEnabled

//        resConfigs('zh-rCN', 'ko') // 只保留中文资源
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    signingConfigs {
        release {
            storeFile file('keystores/release/commutilcme1990')
            storePassword keystoreProperties['KEY_PWD']
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PWD']
        }
        debug {
            storeFile file('keystores/debug/commutilcme1990')
            storePassword keystoreProperties['KEY_PWD']
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PWD']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (null != outputFile && outputFile.name.endsWith('.apk')) {
                def fileName = "ULib_" + variant.productFlavors[0].name + "_" + variant.buildType.name + "_v" + versionName + "_c" + versionCode + ".apk"
                output.apkData.outputFileName = fileName
            }
        }
    }

    flavorDimensions "default"
    productFlavors {
        sit {
            dimension "default"
            buildConfigField "String", "API_HOST", "${ApiHost_Sit}"
            manifestPlaceholders = [
                    APP_NAME: "${AppName_Sit}"
            ]
        }
        alpha {
            dimension "default"
            buildConfigField "String", "API_HOST", "${ApiHost_Alpha}"
            manifestPlaceholders = [
                    APP_NAME: "${AppName_Alpha}"
            ]
        }
        product {
            dimension "default"
            buildConfigField "String", "API_HOST", "${ApiHost_Product}"
            manifestPlaceholders = [
                    APP_NAME: "${AppName_Product}"
            ]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation rootProject.depsLibs.junit
    androidTestImplementation rootProject.depsLibs.testRunner
    androidTestImplementation rootProject.depsLibs.testEspressoCore

    implementation project(':commutillib')
    implementation project(":commnetlib")

    implementation rootProject.depsLibs.androidxCoreKtx
    implementation rootProject.depsLibs.appcompat

    /**
     * Gson
     */
    implementation rootProject.depsLibs.gson

    /**
     * anko
     */
    implementation rootProject.depsLibs.anko

    /**
     * liveEventBus
     */
    implementation rootProject.depsLibs.liveEventBus

    implementation rootProject.depsLibs.coroutines
    implementation rootProject.depsLibs.dynamicAnimationKtx
    implementation rootProject.depsLibs.svgaPlayer
    implementation rootProject.depsLibs.simpleRatingBar

//    /**
//     * flutter 项目
//     */
//    implementation project(':flutter')
}
